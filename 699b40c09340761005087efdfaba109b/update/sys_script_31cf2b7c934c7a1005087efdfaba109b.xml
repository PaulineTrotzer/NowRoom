<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1782765_nowroom_reservation</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1782765_nowroom_reservation">planned_startISNOTEMPTY^planned_endISNOTEMPTY^EQ<item endquery="false" field="planned_start" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="planned_end" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Calculate Duration</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current /*, previous*/) {
	if (!current.planned_start || !current.planned_end) {
		current.duration_minutes = '';
		return;
	}
	// start + end
	var start = new GlideDateTime(current.planned_start);
	var end = new GlideDateTime(current.planned_end);

	// difference in milliseconds
	var diffMs = end.getNumericValue() - start.getNumericValue();

	// if end <= start â†’ error
	if (diffMs <= 0) {
		gs.addErrorMessage('Planned end must be after planned start.');
		current.setAbortAction(true);
		return;
	}
	//convert into minutes
	var diffMinutes = Math.round(diffMs / 1000 / 60);

	// set field value
	current.duration_minutes = diffMinutes;
})(current);

]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-09-15 18:24:59</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>31cf2b7c934c7a1005087efdfaba109b</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Calculate Duration</sys_name>
        <sys_overrides/>
        <sys_package display_value="NowRoom" source="x_1782765_nowroom">699b40c09340761005087efdfaba109b</sys_package>
        <sys_policy/>
        <sys_scope display_value="NowRoom">699b40c09340761005087efdfaba109b</sys_scope>
        <sys_update_name>sys_script_31cf2b7c934c7a1005087efdfaba109b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-09-16 20:11:45</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=31cf2b7c934c7a1005087efdfaba109b"/>
</record_update>
