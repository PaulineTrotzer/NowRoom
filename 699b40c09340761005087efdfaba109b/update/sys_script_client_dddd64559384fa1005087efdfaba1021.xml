<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description>Recalculates the formatted reservation duration whenever the Planned Start date/time changes. Updates the Reservation Duration field immediately, without saving.</description>
        <field>planned_start</field>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>DurationFormat Start </name>
        <order>100</order>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
	if (isLoading) return;

	// loop-guard
	if (g_form._revertingChange) { g_form._revertingChange = false; return; }

	// old field-message clean up
	// g_form.hideFieldMsg('planned_start', true);
	//g_form.hideFieldMsg('planned_end', true);

	var s = g_form.getValue('planned_start'); // "YYYY-MM-DD HH:mm:ss"
	var e = g_form.getValue('planned_end');
	if (!s || !e) {
		g_form.setValue('duration_pretty', '');
		return;
	}
	// parsing
	var sDate = new Date(s.replace(' ', 'T'));
	var eDate = new Date(e.replace(' ', 'T'));
	var badFormat = (isNaN(sDate) || isNaN(eDate));
	var badOrder = (!badFormat && (eDate.getTime() <= sDate.getTime()));

	if (badFormat) {
		// start has no valid date/time format
		g_form.showFieldMsg('planned_start', 'Please enter a valid date/time.', 'error', true);
		g_form.setValue('duration_pretty', '');
		return;
	}

	if (badOrder) {
		// If user enters a start date = after end date then its invalid.script automatically resets planned_start to the value of planned_end.
		g_form._revertingChange = true;
		g_form.setValue('planned_start', e);

		// display message with min. delay below end field
		setTimeout(function () {
			g_form.showFieldMsg('planned_end', 'Planned End must be after Planned Start', 'error', true);
		}, 0);

		g_form.setValue('duration_pretty', '');
		return;
	}

	// valid? -> calculate duration
	var mins = Math.round((eDate - sDate) / 60000);
	var DAY = 1440, H = 60;
	var d = Math.floor(mins / DAY);
	var h = Math.floor((mins % DAY) / H);
	var m = mins % H;

	var val;
	if (d) {
		val = d + ' ' + (d === 1 ? 'day' : 'days') + (h ? ' ' + h + ' ' + (h === 1 ? 'hour' : 'hours') : '');
	} else if (h) {
		val = h + ' ' + (h === 1 ? 'hour' : 'hours') + (m ? ' ' + m + ' ' + (m === 1 ? 'minute' : 'minutes') : '');
	} else {
		val = m + ' ' + (m === 1 ? 'minute' : 'minutes');
	}
	g_form.setValue('duration_pretty', val);
}
]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-09-16 17:34:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>dddd64559384fa1005087efdfaba1021</sys_id>
        <sys_mod_count>39</sys_mod_count>
        <sys_name>DurationFormat Start </sys_name>
        <sys_overrides/>
        <sys_package display_value="NowRoom" source="x_1782765_nowroom">699b40c09340761005087efdfaba109b</sys_package>
        <sys_policy/>
        <sys_scope display_value="NowRoom">699b40c09340761005087efdfaba109b</sys_scope>
        <sys_update_name>sys_script_client_dddd64559384fa1005087efdfaba1021</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-09-30 22:30:31</sys_updated_on>
        <table>x_1782765_nowroom_reservation</table>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <view/>
    </sys_script_client>
</record_update>
